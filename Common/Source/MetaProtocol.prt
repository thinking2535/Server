include NetProtocol
include <Rso/Physics/Protocol>

namespace bb
{
	using namespace rso
	using namespace core
	using namespace physics

	enum class ECashItemType
	{
		ResourcesPack
		Max
		Null
	}
	enum class EGoodsItemType
	{
		AvatarColor
		Max
		Null
	}
	enum class ERank : uint8
	{
		Unranked
		Bronze
		Silver
		Gold
		Diamond
		Champion
		Max
	}
	struct SServerConfigMeta
	{
	}
	struct SStructureMove
	{
		list<SRectCollider2D> Colliders
		SPoint BeginPos
		SPoint EndPos
		float Velocity
		float Delay
	}
	struct SConfigMeta
	{
		TResource freeTicket
		int32 BattleDurationSec
		int32 BattleOneOnOneDurationSec
		int32 GhostDelaySec
		int32 InvulnerableDurationSec
		int32 BalloonHitPoint
		int32 ParachuteHitPoint
		int32 FirstBalloonHitPoint
		int32 ChangeNickFreeCount
		EResource ChangeNickCostType
		TResource ChangeNickCostValue
		EResource TutorialRewardType
		TResource TutorialRewardValue
		TResource MaxTicket
		EResource BattleCostType
		TResource BattleCostValue
		hours fatigueHoursPeriod
	}
	struct SForbiddenWordMeta
	{
		wstring Word
	}
	struct ExchangeValue
	{
		EResource costResourceType
		double rate
	}
	struct ShopExchangeMeta
	{
		EResource targetResourceType
		ExchangeValue exchangeValue
	}

	struct CharacterTypeMeta
	{
		EGrade grade
		int32 subGrade
		wstring howToGet
		TResource CostValue
		EResource RefundType
		TResource RefundValue
		float MaxVelAir
		float MaxVelXGround
		float StaminaMax
		float PumpSpeed
		float BodyWeight
	}
	struct CharacterTypeKeyValueMeta
	{
		wstring type
		CharacterTypeMeta value
	}
	struct CharacterMeta
	{
		int32 Code
		wstring type
		int32 fatigueCapacity
		bool isDefault
	}
	typedef vector<SPoint> TPoses

	struct SMultiMap : SPoint
	{
		int32 index
		wstring PrefabName
		TPoses Poses
		list<SBoxCollider2D> Structures
		list<SStructureMove> StructureMoves
	}
	struct SPrefabNameCollider
	{
		wstring PrefabName
		SRectCollider2D Collider
	}

	struct SArrowDodgeMap : SPoint
	{
		wstring PrefabName
		list<SBoxCollider2D> Structures
	}
	struct SArrowDodgeMapInfo
	{
		vector<SArrowDodgeMap> Maps
		SPrefabNameCollider Arrow
		SPrefabNameCollider Coin
		SPrefabNameCollider GoldBar
		SPrefabNameCollider Shield
		SPrefabNameCollider Stamina
	}

	struct SFlyAwayMap : SPoint
	{
		wstring PrefabName
		list<SBoxCollider2D> Structures
		list<SBoxCollider2D> deadZones
		SBoxCollider2D ocean
	}
	struct SFlyAwayMapInfo
	{
		vector<SFlyAwayMap> Maps
		vector<SPrefabNameCollider> Lands
		SPrefabNameCollider Coin
		SPrefabNameCollider GoldBar
		SPrefabNameCollider Apple
		SPrefabNameCollider Meat
		SPrefabNameCollider Chicken
	}
	struct SMapMeta
	{
		vector<SMultiMap> OneOnOneMaps
		SArrowDodgeMapInfo ArrowDodgeMapInfo
		SFlyAwayMapInfo FlyAwayMapInfo
	}

	struct SRankTierMeta
	{
		ERank Rank
		int32 Tier
		int32 MaxPoint
	}
	struct SRankRewardMeta
	{
		int32 point
		wstring rewardType
		int32 rewardValue
	}
	struct SQuestMeta
	{
		EQuestType QuestType
		int32 Code
		int32 unitCompleteCount
		int32 completeCount
		wstring rewardType
		int32 rewardValue
	}
	struct QuestConfigMeta
	{
		minutes coolMinutes
		int32 dailyRequirementCount
		wstring dailyRewardType
		int32 dailyRewardValue
		minutes dailyRefreshMinutes
	}

	struct BattleConfigMeta
	{
		int32 addedFatigue
	}
	struct MultiBattleConfigMeta : BattleConfigMeta
	{
		int32 DisconnectableSeconds
		int32 PunishMinutesForDisconnect
		TResource rewardDiaValue
		int32 eloDiffPoint
		double eloDiffWinRatio
		double eloKWeight
	}
	struct MultiBattleDiaRewardMeta
	{
		EResource diaType
		double ratio
	}
	struct SMultiMatchDeniedDurationMeta
	{
		int32 DisconnectedCount
		int32 DeniedSeconds
	}
	struct ArrowDodgeConfigMeta : BattleConfigMeta
	{
		int32 ArrowDodgePoint
		int32 ArrowGetPoint
		int64 ItemDurationTick
		int64 ItemRegenPeriodTick
		int32 maxItemCount
		int32 PlayCountMax
		TResource ChargeCostGold
		int32 RefreshDurationMinute
		int32 scorePerGold
	}
	struct SArrowDodgeItemMeta
	{
		EArrowDodgeItemType ItemType
		uint32 CreateWeight
		TResource AddedGold
	}

	struct FlyAwayConfigMeta : BattleConfigMeta
	{
		int32 maxComboMultiplier
		float landingAddedStamina
		int32 PlayCountMax
		TResource ChargeCostGold
		int32 RefreshDurationMinute
		int32 scorePerGold
	}
	struct SFlyAwayItemMeta
	{
		EFlyAwayItemType ItemType
		uint32 StaminaCreateWeight
		TResource AddedGold
		float AddedStamina
	}

	struct SCouponMeta
	{
		int32 Code
		int32 StartYear
		int32 StartMonth
		int32 StartDay
		int32 StartHour
		int32 EndYear
		int32 EndMonth
		int32 EndDay
		int32 EndHour
		wstring rewardType
		int32 rewardValue
	}
	struct SCouponKeyMeta
	{
		wstring Key
		int32 Code
	}

	struct SRankingConfigMeta
	{
		int32 PeriodMinutes
		wstring BaseTime
	}
	struct SRankingRewardMeta
	{
		wstring Mode
		int32 End
		wstring rewardType
		int32 rewardValue
	}
}
